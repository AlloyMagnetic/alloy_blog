<?php

/**
 * @file
 * Contains alloy_blog.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Link;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\alloy_blog\Entity\Blog;
use Drupal\views\Entity\View;
use Drupal\views\Views;

/**
 * Implements hook_help().
 */
function alloy_blog_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the alloy_blog module.
    case 'help.page.alloy_blog':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Coming Soon') . '</p>';
      return $output;

    default:
  }
}

function alloy_blog_theme($existing, $type, $theme, $path) {
  $theme = [];
  $theme['blog'] = [
    'render element' => 'elements',
    'file' => 'blog.page.inc',
    'template' => 'blog',
  ];
  return $theme;
}

function alloy_blog_install() {
  // Enable pathauto for blog entities
  $config = \Drupal::service('config.factory')->getEditable('pathauto.settings');
  $enabled_pathauto_types = $config->get('enabled_entity_types');
  $enabled_pathauto_types[] = 'blog';
  $config->set('enabled_entity_types', $enabled_pathauto_types)->save();
}

function alloy_blog_preprocess_node(&$variables) {
  $node = $variables['elements']['#node'];

  $type = $node->getType();
  $id = $node->get('nid')->value;
  $view_mode = $variables['view_mode'];

  if ($type == 'blog_post') {
    if ($view_mode == 'full') {
      // Add author bio
      $args = [$id];
      $view = Views::getView('author');
      $display = 'bio_block';
      if (is_object($view)) {
        $view->setArguments($args);
        $view->setDisplay($display);
        $view->preExecute();
        $view->execute();
        $variables['content']['author_bio'] = $view->buildRenderable($display, $args);
      }
    }
    else if ($view_mode == 'teaser') {
      // Limit to 1 category in teasers
      $category_count = count($variables['content']['field_categories']['#items']);
      for ($i = 1; $i < $category_count; $i++) {
        unset($variables['content']['field_categories'][$i]);
      }
      // Add class to title if no image present
      if (!isset($variables['content']['field_blog_post_image'][0])) {
        $variables['title_attributes']['class'][] = 'no-image';
      }
    }
  }
}

function alloy_blog_preprocess_assembly(&$variables) {
  $assembly = $variables['elements']['#assembly'];
  $type = $assembly->bundle();

  if ($type == 'blog_feed') {
    $args = [
      'fields' => [
        'blog',
        'category',
        'author'
      ],
    ];
    foreach($args['fields'] as $field) {
      foreach($assembly->get('field_filter_by_' . $field)->getValue() as $value) {
        $args['values'][$field][] = $value['target_id'];
      }
      if (count($args['values'][$field])) {
        $args['view_args'][] = implode('+', $args['values'][$field]);
      }
      else {
        $args['view_args'][] = 'all';
      }
    }

    $view = \Drupal\views\Views::getView('blog_feed');
    $display = 'embed_1';
    $variables['content']['view'] = $view->buildRenderable($display, $args['view_args']);
    $variables['content']['view']['#weight'] = 5;

    $variables['content']['more']['link'] = Link::fromTextAndUrl('More Blog Posts', $view->getUrl($args['view_args'], 'page_1'))->toRenderable();
    $variables['content']['more']['#weight'] = 6;

    // If the filter is a single blog, single term, or single blog+term, use the
    // seo friendly url aliases for the More Blog Posts link
    $route_params = false;
    $blog_count = count($args['values']['blog']);
    $term_count = count($args['values']['category']);

    if ($blog_count == 1 && $term_count == 0) {
      $route_params['blog'] = implode($args['values']['blog']);
      $variables['content']['more']['link'] = Link::fromTextAndUrl('More Blog Posts', Url::fromRoute('entity.blog.canonical', $route_params))->toRenderable();
    }
    else if ($blog_count == 0 && $term_count == 1) {
      $route_params['taxonomy_term'] = implode($args['values']['category']);
      $variables['content']['more']['link'] = Link::fromTextAndUrl('More Blog Posts', Url::fromRoute('entity.taxonomy_term.canonical', $route_params))->toRenderable();
    }
    else if ($blog_count == 1 && $term_count == 1) {
      $route_params['blog'] = implode($args['values']['blog']);
      $route_params['term'] = implode($args['values']['category']);
      $variables['content']['more']['link'] = Link::fromTextAndUrl('More Blog Posts', Url::fromRoute('alloy_blog.blog_term_content', $route_params))->toRenderable();
    }
  }
}

function alloy_blog_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Don't show the blog field if there is only one blog
  if (in_array($form_id, ['node_blog_post_edit_form', 'node_blog_post_form'])) {
    $ids = \Drupal::entityQuery('blog')->execute();
    if (is_array($ids) && count($ids) == 1) {
      $blog = Blog::load(reset($ids));
      $form['field_blog']['widget']['#default_value'] = [$blog->id() => $blog->id()];
      $form['field_blog']['#access'] = FALSE;
    }
  }
}

function alloy_blog_entity_insert(EntityInterface $entity) {
  if (in_array($entity->getEntityTypeId(), ['blog', 'taxonomy_term'])) {
    \Drupal::service('alloy_blog.blog_term_path_manager')->blogOrTermEdit($entity);
  }
}

function alloy_blog_entity_update(EntityInterface $entity) {
  if (in_array($entity->getEntityTypeId(), ['blog', 'taxonomy_term'])) {
    \Drupal::service('alloy_blog.blog_term_path_manager')->blogOrTermEdit($entity);
  }
}
